import os
import requests
import subprocess
import sys

# ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ python-dotenv, –µ—Å–ª–∏ –æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω
try:
    import dotenv
    from dotenv import load_dotenv
except ImportError:
    print("‚ö†Ô∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é python-dotenv...")
    subprocess.run([sys.executable, "-m", "pip", "install", "python-dotenv"])
    import dotenv
    from dotenv import load_dotenv

# ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ª–∏ —Å–∫—Ä–∏–ø—Ç –≤ Google Colab
try:
    from google.colab import drive
    IN_COLAB = True
except ImportError:
    IN_COLAB = False

# ‚úÖ –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ .env (–µ—Å–ª–∏ –≤ Colab, –ø—Ä–æ–±—É–µ–º Google Drive)
env_path = None

if IN_COLAB:
    try:
        drive.mount('/content/drive')
        env_path = '/content/drive/MyDrive/Colab/.env'  # üü¢ –ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —ç—Ç–æ—Ç –ø—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π!
        if not os.path.exists(env_path):
            raise FileNotFoundError("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Google Drive!")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Google Drive: {e}")
        env_path = None

# –ï—Å–ª–∏ Google Drive –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ –ø—É—Ç—å –≤—Ä—É—á–Ω—É—é
if env_path is None:
    env_path = input("–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É .env —Ñ–∞–π–ª—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, /content/.env): ")

# ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
if os.path.exists(env_path):
    load_dotenv(env_path)
else:
    raise ValueError(f"‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω! –£–∫–∞–∑–∞–Ω–Ω—ã–π –ø—É—Ç—å: {env_path}")

# ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ TELEGRAM_BOT_TOKEN
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
if not TELEGRAM_BOT_TOKEN:
    raise ValueError("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ .env —Ñ–∞–π–ª–µ!")

# ‚úÖ ID –∫–∞–Ω–∞–ª–∞ (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
CHANNEL_ID = -1001234567890  

# ‚úÖ –ü–æ–ª—É—á–∏—Ç—å user_id –ø–æ username
def get_user_id(username):
    url = f'https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/getChat'
    params = {'chat_id': username}
    response = requests.get(url, params=params)
    if response.status_code == 200:
        data = response.json()
        user_id = data.get('result', {}).get('id')
        return user_id
    return None

# ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª
def check_subscription(user_id):
    url = f'https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/getChatMember'
    params = {'chat_id': CHANNEL_ID, 'user_id': user_id}
    response = requests.get(url, params=params)
    if response.status_code == 200:
        data = response.json()
        status = data.get('result', {}).get('status')
        return status in ['member', 'administrator', 'creator']
    return False

# ‚úÖ –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
def main():
    username = input('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram username (–Ω–∞–ø—Ä–∏–º–µ—Ä, @username): ')

    # –ü–æ–ª—É—á–∞–µ–º user_id
    user_id = get_user_id(username)
    if not user_id:
        print('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à user_id. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ username.')
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    if not check_subscription(user_id):
        print('‚ùå –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª.')
        return

    url = 'https://hdmn.cloud/ru/demo/'

    try:
        response = requests.get(url)

        if response.status_code == 200:
            if '–í–∞—à–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞' in response.text:
                email = input('–í–≤–µ–¥–∏—Ç–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É –¥–ª—è —Ç–µ—Å—Ç–∞: ')
                response = requests.post('https://hdmn.cloud/ru/demo/success/', data={"demo_mail": email})

                if '–í–∞—à –∫–æ–¥ –≤—ã—Å–ª–∞–Ω –Ω–∞ –ø–æ—á—Ç—É' in response.text:
                    print('‚úÖ –í–∞—à –∫–æ–¥ —É–∂–µ –≤ –ø—É—Ç–∏! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç–æ–≤—ã–π —è—â–∏–∫.')
                else:
                    print('‚ùå –ü–æ—á—Ç–∞ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ—Å—Ç–∞.')
            else:
                print('‚ö†Ô∏è –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω—É–∂–Ω—ã–π —Ç–µ–∫—Å—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞.')
        else:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ. –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: {response.status_code}")

    except requests.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ —Å–∞–π—Ç—É: {e}")

if __name__ == '__main__':
    main()
